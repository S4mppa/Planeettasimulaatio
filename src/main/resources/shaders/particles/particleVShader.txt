#version 330

layout (location = 0) in vec2 position;

out float logz;
out vec2 texCoords1;
out vec2 texCoords2;
out float blend;


//Per instance attributes
layout (location = 1) in mat4 modelViewMatrix;
layout (location = 5) in vec4 texOffsets;
layout (location = 6) in float blendFactor;



uniform mat4 projectionMatrix;
uniform float numberOfRows;

const float near = 1.0f;
const float far = 35000000000.0f;
const float C = 1.0; //resolution near the camera, for the logarithmic depth function

void main(void){

    vec2 texCoords = position + vec2(0.5, 0.5);
    texCoords.y = 1.0 - texCoords.y;
    texCoords /= numberOfRows;

    texCoords1 = texCoords + texOffsets.xy;
    texCoords2 = texCoords + texOffsets.zw;
    blend = blendFactor;

	gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 0.0, 1.0);
    const float FC = 1.0/log(far*C + 1);

    //logz = gl_Position.w*C + 1;  //version with fragment code
    logz = log(gl_Position.w*C + 1)*FC;
    gl_Position.z = (2*logz - 1)*gl_Position.w;
}